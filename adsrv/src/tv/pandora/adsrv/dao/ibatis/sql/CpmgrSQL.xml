<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    <sqlMap namespace="CpmgrSQL">
    <typeAlias alias="cp" type="tv.pandora.adsrv.domain.Campaign" />
    <typeAlias alias="cr" type="tv.pandora.adsrv.domain.Creative" />
    <typeAlias alias="target" type="tv.pandora.adsrv.domain.Target" />
    <typeAlias alias="ads" type="tv.pandora.adsrv.domain.Ads" />
	
	
	 <sql id="ADS.STATE">
		select cpid, sum(if(ads_state=1 and substr(enddate, 1,8)>curdate()+0,1,0)) readycnt,
               sum(if(ads_state=2,1,0)) bookcnt,
               sum(if(ads_state=3,1,0)) runcnt,
               sum(if(ads_state=5,1,0)) completecnt,
               sum(if(ads_state=0,1,0)) pausecnt,
               sum(if(ads_state=-1,1,0)) stopcnt,
               <![CDATA[sum(if(ads_state=-2 or (ads_state=1 and substr(enddate, 1,8)<=curdate()+0),1,0) )]]> cancelcnt,
               sum(1) totcnt,
               max(a.adsid) max_adsid,
               count(t.targetid) target_cnt,
               sum(if(a.prtype=2,1,0)) prism_cnt
           from ads a	
                left join ads_targeting t on a.adsid = t.adsid          	           
           <dynamic prepend="where">		 	  
			<isNotEmpty property="cpid" prepend="and"> cpid = #cpid#</isNotEmpty>
		   </dynamic>
          group by cpid	
   	</sql>  
	<sql id="CP.STATE">
              case
              when ifnull(runcnt       ,0) > 0 then 3
              when ifnull(bookcnt      ,0) > 0 then 2
              when ifnull(readycnt     ,0) > 0 then 1
              when ifnull(completecnt  ,0) > 0 then 5
              when ifnull(pausecnt     ,0) > 0 then 0
              when ifnull(stopcnt      ,0) > 0 then -1
              when ifnull(cancelcnt    ,0) > 0 then -2
              when ifnull(totcnt       ,0) = 0 then -3
              else 0
              end cp_state
   </sql>	 
 	<select id="getCpList" resultClass="cp" parameterClass="java.util.Map">
select x.*, y.isname as cp_statename, y.text
 from (select a.cpid, a.cpname, a.startdate, a.enddate, 
              case
              when ifnull(runcnt       ,0) > 0 then 3
              when ifnull(bookcnt      ,0) > 0 then 2
              when ifnull(readycnt     ,0) > 0 then 1
              when ifnull(completecnt  ,0) > 0 then 5
              when ifnull(pausecnt     ,0) > 0 then 0
              when ifnull(stopcnt      ,0) > 0 then -1
              when ifnull(cancelcnt    ,0) > 0 then -2
              when ifnull(totcnt       ,0) = 0 then -3
              else 0
              end cp_state,
              a.clientid, c.corpname as clientname,
              a.agencyid, g.corpname as agencyname,
              a.medrepid, r.corpname as medrepname, a.tcid, t.username as tcname, a.budget,
              a.insertdate, a.updatedate, a.insertuser, a.updateuser, u.username as updateusername,
              if(target_cnt>0,'Y','N') istarget, if(prism_cnt>0,'Y','N') isprism	       
         from campaign a
              left join 
              (
              	<include refid="ADS.STATE" />
			  )  b on a.cpid = b.cpid
              left join corporation c on a.clientid = c.corpid and c.corptype = 1
		      left join corporation g on a.agencyid = g.corpid and g.corptype = 2
		      left join corporation r on a.medrepid = r.corpid and r.corptype = 3
		      left join users t on a.tcid = t.userid
		      left join users u on a.updateuser = u.userid
        where a.stat = 1
	          <isNotEmpty property="sday" prepend="and">  substr(a.startdate,1,8) >= $sday$</isNotEmpty>
	          <isNotEmpty property="eday" prepend="and"> <![CDATA[  substr(a.enddate,1,8) <= $eday$]]></isNotEmpty>
        group by a.cpid
      ) x
      left join code_instance y on y.code = 'ads_state' and x.cp_state = y.isid
	<dynamic prepend="where">		 	  
		<isNotEmpty property="cp_state" prepend="and"> cp_state = $cp_state$</isNotEmpty>
		<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
	</dynamic>	
	order by x.cpid desc
    <isNotEmpty property="max">
      limit $skip$,$max$
    </isNotEmpty>     
    </select>
	<select id="getCpCnt" resultClass="Integer" parameterClass="java.util.Map">		
	 select count(*)
		 from (select a.cpid, a.cpname, a.startdate, a.enddate, 
		              case
		              when ifnull(runcnt       ,0) > 0 then 3
		              when ifnull(bookcnt      ,0) > 0 then 2
		              when ifnull(readycnt     ,0) > 0 then 1
		              when ifnull(completecnt  ,0) > 0 then 5
		              when ifnull(pausecnt     ,0) > 0 then 0
		              when ifnull(stopcnt      ,0) > 0 then -1
		              when ifnull(cancelcnt    ,0) > 0 then -2
		              when ifnull(totcnt       ,0) = 0 then -3
		              else 0
		              end cp_state,
		              a.clientid, c.corpname as clientname,
		              a.agencyid, g.corpname as agencyname,
		              a.medrepid, r.corpname as medrepname, a.tcid, a.budget,
		              a.insertdate, a.updatedate, a.insertuser, a.updateuser, u.username as updateusername	       
		         from campaign a
		              left join 
		              (
		              <include refid="ADS.STATE" />
		              )  b on a.cpid = b.cpid
		              left join corporation c on a.clientid = c.corpid and c.corptype = 1
				      left join corporation g on a.agencyid = g.corpid and g.corptype = 2
				      left join corporation r on a.medrepid = r.corpid and r.corptype = 3
				      left join users t on a.tcid = t.userid
				      left join users u on a.updateuser = u.userid
		        where a.stat = 1
	          <isNotEmpty property="sday" prepend="and">  substr(a.startdate,1,8) >= $sday$</isNotEmpty>
	          <isNotEmpty property="eday" prepend="and"> <![CDATA[  substr(a.enddate,1,8) <= $eday$]]></isNotEmpty>
 		      ) x
		  <dynamic prepend="where">		 	  
				<isNotEmpty property="cp_state" prepend="and"> cp_state = $cp_state$</isNotEmpty>
				<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
			</dynamic>	
	</select>
	<select id="getCampaign" resultClass="cp" parameterClass="java.util.Map">
	select x.*, y.isname as cp_statename, y.text
	 from (select a.cpid, a.cpname, a.startdate, a.enddate, 
             case
              when ifnull(runcnt       ,0) > 0 then 3
              when ifnull(bookcnt      ,0) > 0 then 2
              when ifnull(readycnt     ,0) > 0 then 1
              when ifnull(completecnt  ,0) > 0 then 5
              when ifnull(pausecnt     ,0) > 0 then 0
              when ifnull(stopcnt      ,0) > 0 then -1
              when ifnull(cancelcnt    ,0) > 0 then -2
              when ifnull(totcnt       ,0) = 0 then -3
              else 0
              end cp_state,
              ifnull(max_adsid,0) as max_adsid,
              a.clientid, c.corpname as clientname,
              a.agencyid, g.corpname as agencyname,
              a.medrepid, r.corpname as medrepname, a.tcid, t.username as tcname, a.budget,
              a.insertdate, a.updatedate, a.insertuser, a.updateuser, u.username as updateusername	       
         from campaign a
              left join 
              (
				<include refid="ADS.STATE" />             

              )  b on a.cpid = b.cpid
              left join corporation c on a.clientid = c.corpid and c.corptype = 1
		      left join corporation g on a.agencyid = g.corpid and g.corptype = 2
		      left join corporation r on a.medrepid = r.corpid and r.corptype = 3
		      left join users t on a.tcid = t.userid
		      left join users u on a.updateuser = u.userid
        where a.cpid = #cpid#
      ) x
      left join code_instance y on y.code = 'ads_state' and x.cp_state = y.isid
   </select>
 	<select id="getAutoCorpList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		select a.corpname as label, a.corpid as value, a.corpname as id
		 from adsrv.corporation a  
		 where stat = 1
		 	and corptype = $corptype$
		 order by corpname
	</select>  
	<select id="getCodeList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		select a.code, a.isid, a.isname, text, isdefault
		 from code_instance a  
		      <isNotEmpty property="tbname"> inner join code_entity b on b.tbname = '$tbname$' and a.code = b.code</isNotEmpty>
		 where a.stat = 1
		 	<isNotEmpty property="code"  prepend="and"> a.code = '$code$' </isNotEmpty>
		 order by code, a.idx
	</select>  
      
	<insert id="addCampaign" parameterClass="cp">	
	insert into adsrv.campaign
            (cpid,
             cpname,
             startdate,
             enddate,
             clientid,
             <isNotEmpty property="agencyid">agencyid, </isNotEmpty>
             <isNotEmpty property="medrepid">medrepid, </isNotEmpty>
             <isNotEmpty property="aeid">aeid, </isNotEmpty>
             budget,
             <isNotEmpty property="tcid">tcid, </isNotEmpty>
             stat,
             insertdate,
             updatedate,
             insertuser,
             updateuser)
		values (0,
	        '$cpname$',
	        '$startdate$',
	        '$enddate$',
	        $clientid$,
	        <isNotEmpty property="agencyid">$agencyid$, </isNotEmpty>
	        <isNotEmpty property="medrepid">$medrepid$, </isNotEmpty>
	        <isNotEmpty property="aeid">$aeid$, </isNotEmpty>
	        '$budget$',
	        <isNotEmpty property="tcid">$tcid$, </isNotEmpty>
	        1,
	        '$insertdate$',
	        '$insertdate$',
	        $insertuser$,
	        $insertuser$);
	        
	    	<selectKey resultClass="int">
	         SELECT LAST_INSERT_ID()
	        </selectKey>        
	        
	</insert>
	<update id="modCampaign" parameterClass="cp">
		update adsrv.campaign
		set
		  <isNotEmpty property="cpname">cpname      = '$cpname$', </isNotEmpty>    
		  <isNotEmpty property="startdate">startdate   = '$startdate$', </isNotEmpty> 
		  <isNotEmpty property="enddate">enddate     = '$enddate$', </isNotEmpty>    
		  <isNotEmpty property="clientid">clientid     = $clientid$, </isNotEmpty>      
		  <isNotEmpty property="agencyid">agencyid    = $agencyid$, </isNotEmpty>     
		  <isNotEmpty property="medrepid">medrepid    = $medrepid$, </isNotEmpty>     
		  <isNotEmpty property="aeid">aeid        = $aeid$, </isNotEmpty>         
		  <isNotEmpty property="budget">budget      = '$budget$', </isNotEmpty>     
		  <isNotEmpty property="tcid">tcid        = $tcid$, </isNotEmpty> 
		  <isNotEmpty property="stat"> stat = $stat$,</isNotEmpty>       
		  updatedate  = $updatedate$,         
		  updateuser  = $updateuser$		     
		where cpid = $cpid$;	
	</update>
	<select id="getCpAdsList" resultClass="ads" parameterClass="java.util.Map">
	select adsid, a.adsname, 
	       a.startdate, a.start_hour, a.start_min, a.enddate, a.end_hour, a.end_min, 
	       a.goaltype, a.period, a.salestype, a.prtype, 
		   a.budget, a.book_total, a.goal_total, a.goal_daily, 
		   a.ads_state, st.isname as ads_statename, st.text,
	       a.insertuser, a.insertdate, a.updateuser, u.username as updateusername, a.updatedate       
      from adsrv.ads a
		   left join users u on a.updateuser = u.userid
		   left join code_instance st on st.code = 'ads_state' and a.ads_state = st.isid
     where a.stat = $stat$
       and a.cpid = $cpid$
 	</select>
	<select id="getAdsList" resultClass="ads" parameterClass="java.util.Map">
	select a.*, st.isname as ads_statename, st.text, u.username as updateusername,
	       if(target_cnt>0,'Y','N') istarget, if(prtype=2,'Y','N') isprism
	   from (select a.adsid, a.adsname, b.cpname, 				
		   			b.clientid, c.corpname as clientname,
			       <isNotEmpty property="sch_text">
					b.agencyid, g.corpname as agencyname,
					b.medrepid, r.corpname as medrepname,
					</isNotEmpty>
			       a.startdate, a.start_hour, a.start_min, a.enddate, a.end_hour, a.end_min, 
			       a.goaltype, a.period, a.salestype, a.prtype, 
				   a.budget, a.book_total, a.goal_total, a.goal_daily, 
				   a.ads_state, 
			       a.insertuser, a.insertdate, a.updateuser, a.updatedate,
			       count(t.targetid) target_cnt			             
		      from adsrv.ads a
		      	   left join ads_targeting t on a.adsid = t.adsid
		           left join adsrv.campaign b on a.cpid = b.cpid
				   left join corporation c on b.clientid = c.corpid and c.corptype = 1
			       <isNotEmpty property="sch_text">
			       left join corporation g on b.agencyid = g.corpid and g.corptype = 2
			       left join corporation r on b.medrepid = r.corpid and r.corptype = 3
			       </isNotEmpty>
		     where a.stat = 1
	              <isNotEmpty property="ads_state" prepend="and"> ads_state = $ads_state$</isNotEmpty>
		          <isNotEmpty property="sday" prepend="and">  substr(a.startdate,1,8) >= $sday$</isNotEmpty>
		          <isNotEmpty property="eday" prepend="and"> <![CDATA[  substr(a.enddate,1,8) <= $eday$]]></isNotEmpty>
		          group by a.adsid
			) a
			left join users u on a.updateuser = u.userid
			left join code_instance st on st.code = 'ads_state' and a.ads_state = st.isid
		<dynamic prepend="where">
		 		  <isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>	
		</dynamic>
        <isNotEmpty property="max">
          limit $skip$,$max$
        </isNotEmpty>;  	
    </select>
	<select id="getAdsCnt" resultClass="Integer" parameterClass="java.util.Map">
	select count(*)
	   from (select adsid, a.adsname, b.cpname, 				
		   			b.clientid, c.corpname as clientname,
					b.agencyid, g.corpname as agencyname,
					b.medrepid, r.corpname as medrepname,
			       a.startdate, a.start_hour, a.start_min, a.enddate, a.end_hour, a.end_min, 
			       a.goaltype, a.period, a.salestype, a.prtype, 
				   a.budget, a.book_total, a.goal_total, a.goal_daily, a.ads_state, 
			       a.insertuser, a.insertdate, a.updateuser, a.updatedate       
		      from adsrv.ads a
		           left join adsrv.campaign b on a.cpid = b.cpid
				   left join corporation c on b.clientid = c.corpid and c.corptype = 1
			       left join corporation g on b.agencyid = g.corpid and g.corptype = 2
			       left join corporation r on b.medrepid = r.corpid and r.corptype = 3
		     where a.stat = 1
	              <isNotEmpty property="ads_state" prepend="and"> ads_state = $ads_state$</isNotEmpty>
		          <isNotEmpty property="sday" prepend="and">  substr(a.startdate,1,8) >= $sday$</isNotEmpty>
		          <isNotEmpty property="eday" prepend="and"> <![CDATA[  substr(a.enddate,1,8) <= $eday$]]></isNotEmpty>
			) a
			left join users u on a.updateuser = u.userid
			left join code_instance st on st.code = 'ads_state' and a.ads_state = st.isid
		<dynamic prepend="where">
		 		  <isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>	
		</dynamic>
        <isNotEmpty property="max">
          limit $skip$,$max$
        </isNotEmpty>;  	
	</select>	
	<select id="getAds" resultClass="ads" parameterClass="java.util.Map">
		select cpid, adsid, a.adsname, 
		    a.startdate, a.start_hour, a.start_min, a.enddate, a.end_hour, a.end_min, a.realenddate,
		    a.period,
			a.goaltype, g.isname as goaltypename,
			a.salestype, s.isname as salestypename,
			a.prtype, p.isname as prtypename,
			a.ads_state, st.isname as ads_statename, st.text,
				   a.budget, a.book_total, a.goal_total, a.goal_daily, 
			       a.insertuser, a.insertdate, a.updateuser, u.username as updateusername, a.updatedate       
		      from adsrv.ads a
				   left join users u on a.updateuser = u.userid
				   left join code_instance p on p.code = 'prtype' and a.prtype = p.isid 
				   left join code_instance g on g.code = 'goaltype' and a.goaltype = g.isid
				   left join code_instance s on s.code = 'salestype' and a.salestype = s.isid
				   left join code_instance st on st.code = 'ads_state' and a.ads_state = st.isid
		     where a.adsid = $adsid$
 	</select>
	<insert id="addAds" parameterClass="ads">
	insert into adsrv.ads
            (adsid,
             adsname,
             cpid,
             startdate,
             start_hour,
             start_min,
             enddate,
             end_hour,
             end_min,
             realenddate,
             stime,
             etime,
             goaltype,
             period,
             salestype,
             prtype,
             budget,
             book_total,
             goal_total,
             goal_daily,
             ads_state,
             stat,
             insertuser,
             insertdate,
             updateuser,
             updatedate             
		) values (0,
		        #adsname#,
		        #cpid#,
		        #startdate#,
		        #start_hour#,
		        #start_min#,
		        #enddate#,
		        #end_hour#,
		        #end_min#,
		        #realenddate#,
		        UNIX_TIMESTAMP(STR_TO_DATE(#startdate#, '%Y%m%d %H%i')),
		       	UNIX_TIMESTAMP(STR_TO_DATE(#realenddate#, '%Y%m%d %H%i')),
		        #goaltype#,
		        #period#,
		        #salestype#,
		        #prtype#,
		        #budget#,
		        #book_total#,
		        #goal_total#,
		        #goal_daily#,
		        1,
		        1,
		        #insertuser#,
		        #insertdate#,
		        #insertuser#,
		        #insertdate#
		);
	    	<selectKey resultClass="int">
	         SELECT LAST_INSERT_ID()
	        </selectKey>        
	
	</insert>
	<update id="modAds" parameterClass="ads">
	update adsrv.ads
	set   <isNotEmpty property="adsname">adsname      = '$adsname$', </isNotEmpty>  
	      <isNotEmpty property="startdate">startdate     = '$startdate$', </isNotEmpty> 
	      <isNotEmpty property="start_hour">start_hour     = '$start_hour$', </isNotEmpty> 
	      <isNotEmpty property="start_min">start_min     = '$start_min$', </isNotEmpty> 
	      <isNotEmpty property="enddate">enddate       = '$enddate$', </isNotEmpty>   
	      <isNotEmpty property="end_hour">end_hour       = '$end_hour$', </isNotEmpty>   
	      <isNotEmpty property="end_min">end_min       = '$end_min$', </isNotEmpty>   
	      <isNotEmpty property="goaltype">goaltype      = $goaltype$, </isNotEmpty>    
	      <isNotEmpty property="period">period        = $period$, </isNotEmpty>      
	      <isNotEmpty property="salestype">salestype     = $salestype$, </isNotEmpty>   
	      <isNotEmpty property="prtype">prtype        = $prtype$, </isNotEmpty>      
	      <isNotEmpty property="budget">budget        = '$budget$', </isNotEmpty>    
	      <isNotEmpty property="book_total">book_total      = '$book_total$', </isNotEmpty>  
	      <isNotEmpty property="goal_total">goal_total      = '$goal_total$', </isNotEmpty>  
	      <isNotEmpty property="goal_daily">goal_daily   = '$goal_daily$' </isNotEmpty>
	      <isNotEmpty property="ads_state">ads_state     = $ads_state$, </isNotEmpty>             
	      <isNotEmpty property="stat">stat     = $stat$, </isNotEmpty>             
	      updateuser    = $updateuser$,  
	      updatedate    = now()          
	where adsid = $adsid$
	;
	
	</update>
	<select id="getCreativeList" resultClass="cr" parameterClass="java.util.Map">
	 select x.*, y.`isname` as cr_statename, y.text
	   from (
			select a.`crid`, a.`crname`, a.`clientid`, b.`corpname` as clientname, 
			       a.`prtype`, t.isname as prtypename, a.`crtype`, a.width, a.`height`, a.`crurl`, max(ifnull(c.`cr_state`,0)) cr_state,
			       a.insertdate, a.insertuser, a.updatedate, a.updateuser, u.username as insertusername
			from creative a
			     left join ads_creative c on a.crid = c.crid
			     left join corporation b on a.clientid = b.corpid
			     left join code_instance t on t.code = 'prtype' and a.prtype = t.isid
				 left join users u on a.updateuser = u.userid
		where a.stat = 1     
			  	<isNotEmpty property="clientid"> and a.clientid = $clientid$</isNotEmpty>
			  	<isNotEmpty property="cr_state"> and c.cr_state = $cr_state$</isNotEmpty>
			  	<isNotEmpty property="width"> and width = $width$</isNotEmpty>
			  	<isNotEmpty property="height"> and height = $height$</isNotEmpty>
			  	<isNotEmpty property="sday"> and substr(a.insertdate, 1, 8) between '$sday$' and '$eday$'</isNotEmpty>
			  	<isNotEmpty property="prtype"> and a.prtype = $prtype$ </isNotEmpty>
			  	<isNotEmpty property="crtype"> and a.crtype = $crtype$ </isNotEmpty>
			group by a.crid
	 		) x
	     	left join code_instance y on y.code = 'cr_state' and x.cr_state = y.isid 
	     	<dynamic prepend="where">
			<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
	     	</dynamic>        
		 order by updatedate desc
         <isNotEmpty property="max">
          limit $skip$,$max$
          </isNotEmpty>;   	          
      </select> 
	<select id="getCreativeCnt" resultClass="Integer" parameterClass="java.util.Map">
	 select count(*)
	   from (
			select a.`crid`, a.`crname`, a.`clientid`, b.`corpname` as clientname, 
			       a.`prtype`, t.isname as prtypename, a.`crtype`, a.width, a.`height`, a.`crurl`, max(ifnull(c.`cr_state`,0)) cr_state,
			       a.insertdate, a.insertuser, a.updatedate, a.updateuser, u.username as insertusername
			from creative a
			     left join ads_creative c on a.crid = c.crid
			     left join corporation b on a.clientid = b.corpid
			     left join code_instance t on t.code = 'prtype' and a.prtype = t.isid
				 left join users u on a.updateuser = u.userid
		where a.stat = 1     
			  	<isNotEmpty property="crientid"> and a."crientid" = $"crientid"$</isNotEmpty>
			  	<isNotEmpty property="cr_state"> and c.cr_state = $cr_state$</isNotEmpty>
			  	<isNotEmpty property="width"> and width = $width$</isNotEmpty>
			  	<isNotEmpty property="height"> and height = $height$</isNotEmpty>
			  	<isNotEmpty property="sday"> and substr(a.insertdate, 1, 8) between '$sday$' and '$eday$'</isNotEmpty>
			  	<isNotEmpty property="prtype"> and a.prtype = $prtype$ </isNotEmpty>
			  	<isNotEmpty property="crtype"> and a.crtype = $crtype$ </isNotEmpty>
			group by a.crid
	 		) x
	     	left join code_instance y on y.code = 'cr_state' and x.cr_state = y.isid 
	     	<dynamic prepend="where">
			<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
	     	</dynamic>        
	  </select> 
	<select id="getCpCreativeList" resultClass="cr" parameterClass="java.util.Map">
     select a.`adsid`, c.adsname, a.`crid`, b.crname, b.width, b.height, 
		       b.prtype, t.isname as prtypename, a.startdate, a.start_hour, a.start_min,
		       a.enddate, a.end_hour, a.end_min, a.weight, a.updatedate, a.updateuser, u.username as updateusername,
		       a.cr_state, st.isname as cr_statename, st.text
	      from ads_creative a
	  		   left join creative b on a.crid = b.crid
			   left join ads c on a.adsid = c.adsid
			   left join code_instance t on t.code = 'prtype' and b.prtype = t.isid
		       left join code_instance st on st.code = 'cr_state' and a.cr_state = st.isid
		       left join users u on a.updateuser = u.userid
 		 where c.cpid = $cpid$
		   <isNotEmpty property="adsid"> and a.adsid = $adsid$ </isNotEmpty>
			;
    </select>
	<select id="getCreative" resultClass="cr" parameterClass="java.util.Map">
			select a.`crid`, a.`crname`, a.`clientid`, b.`corpname` as clientname, 
			       a.`prtype`, t.isname as prtypename, a.`crtype`, a.width, a.`height`, a.`crurl`, a.tmpid,
			       a.insertdate, a.insertuser, a.updatedate, a.updateuser, u.username as updateusername
			from creative a
			     left join corporation b on a.clientid = b.corpid
			     left join code_instance t on t.code = 'prtype' and a.prtype = t.isid
				 left join users u on a.updateuser = u.userid
		where a.stat = 1     
	      and a.crid = $crid$
     </select>     
    <select id="getCrClickList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
    select ckid, clickname, clickurl, 
           a.updatedate, a.updateuser, u.username as updateusername
      from creative_click a
            left join users u on a.updateuser = u.userid
      where crid = $crid$
        and a.stat = 1
    </select>
    <select id="getCrFileList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
    select fileidx, filename, imgurl, filesize, contenttype, 
           a.updatedate, a.updateuser, u.username as updateusername
      from creative_file a
            left join users u on a.updateuser = u.userid
      where crid = $crid$
        and a.stat = 1
     </select>
	<insert id="addCreative" parameterClass="cr">	
		insert into adsrv.creative
            (crid,
             crname,
             clientid,
             <isNotEmpty property="crtype">crtype,</isNotEmpty>
             <isNotEmpty property="crurl">crurl,</isNotEmpty>
             width,
             height,
             tmpid,
             richmedia,
             prtype,
             stat,
             insertdate,
             insertuser,
             updatedate,	
             updateuser
        )values (
        	0,
	        '$crname$',
	        $clientid$,
	        <isNotEmpty property="crtype">$crtype$,</isNotEmpty>
	        <isNotEmpty property="crurl">'$crurl$',</isNotEmpty>
	        $width$,
	        $height$,
	        $tmpid$,
	        '$richmedia$',
	        $prtype$,
	        1,
	        '$insertdate$',
	        $insertuser$,
	        now(),
	        $insertuser$
	      );
	      <selectKey resultClass="int">
	         SELECT LAST_INSERT_ID()
	      </selectKey> 
 	</insert>
 	<insert id="copyCreative" parameterClass="java.util.Map">
		insert into adsrv.creative
		select 0 crid,
			  concat(crname, '_COPY') crname,
			  clientid,
			  crtype,
			  crurl,
			  width,
			  height,
			  tmpid,
			  richmedia,
			  prtype,
			  stat,
			  $insertdate$,
			  $insertuser$,
			  $insertdate$,
			  $insertuser$
		from adsrv.creative
		where crid = $crid$;
	      <selectKey resultClass="int">
	         SELECT LAST_INSERT_ID()
	      </selectKey> 
	</insert>
 	<insert id="copyCreativeClick" parameterClass="java.util.Map">
		insert into adsrv.creative_click(
			crid
			, ckid
			, clickname
			, clickurl
			, updatedate
			, updateuser
			, stat
		)
		select $copyid$,
			  0,
			  clickname,
			  clickurl,
			  $insertdate$,
			  $insertuser$,
			  1
		from adsrv.creative_click
		where crid = $crid$
		  and stat = 1;	       
	</insert>
 	
	<insert id="addCreativeClick" parameterClass="java.util.Map">
         INSERT INTO creative_click (
			crid
			, ckid
			, clickname
			, clickurl
			, updatedate
			, updateuser
			, stat
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].crid# 
					, 0
					, #List[].clickname#
					, #List[].clickurl#
					, now()
					, #List[].updateuser# 	
					, 1		
				)
			</iterate>
		</dynamic>
     </insert>
 	<insert id="addCreativeFile" parameterClass="java.util.Map">
         INSERT INTO creative_file (
			 crid,
             fileidx,
             filename,
             imgurl,
             filesize,
             contenttype,
             updatedate,
             updateuser,
             stat
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].crid# 
					, 0
					, #List[].filename#
					, #List[].imgurl#	
					, #List[].filesize#	
					, #List[].contenttype#	
					, #List[].updatedate#	
					, #List[].updateuser#	
					, 1		
				)
			</iterate>
		</dynamic>
      </insert>	
      <update id="delFile" parameterClass="java.util.Map">
      	update creative_file
      	  set stat = 0
      	where crid = $crid$
      	  and fileidx = $fileidx$
      </update>
      <update id="delClick" parameterClass="java.util.Map">
      	update creative_click
      	  set stat = 0
      	where crid = $crid$
      	  and ckid = $ckid$
      </update>
      <update id="modCreative" parameterClass="cr">	
		update adsrv.creative
		set   <isNotEmpty property="crname">crname        = '$crname$', </isNotEmpty>     
		      <isNotEmpty property="clientid">clientid       = $clientid$, </isNotEmpty>      
		      <isNotEmpty property="prtype">prtype        = $prtype$, </isNotEmpty>       
		      <isNotEmpty property="crurl">crurl         = '$crurl$', </isNotEmpty>      
		      <isNotEmpty property="width">width         = $width$, </isNotEmpty>        
		      <isNotEmpty property="height">height        = $height$, </isNotEmpty>       
		      <isNotEmpty property="tmpid">tmpid         = $tmpid$, </isNotEmpty>  
		      <isNotEmpty property="richmedia">richmedia     = '$richmedia$', </isNotEmpty>  
		       <isNotEmpty property="stat">stat          = $stat$, </isNotEmpty>
		      updateuser    = $updateuser$,  
		      updatedate    = $updatedate$          
		where crid = $crid$;
	</update>
	
	
 	<update id="modAdsHasCreative" parameterClass="java.util.Map">
		update adsrv.ads_has_creative
		  set <isNotEmpty property="startdate">startdate     = $startdate$, </isNotEmpty>
		      <isNotEmpty property="enddate">enddate       = $enddate$, </isNotEmpty>
		      <isNotEmpty property="weight">weight        = $weight$, </isNotEmpty>
		      <isNotEmpty property="cr_state">cr_state      = $cr_state$, </isNotEmpty> 
		      <isNotEmpty property="stat">stat      = $stat$, </isNotEmpty> 
		      updatedate    = now(),
		      updateuser    = $updateuser$  
		where adsid = $adsid$
		  and crid = $crid$
	
	</update>
 
 
 
      <insert id="addAdsHasSlot" parameterClass="java.util.Map">  
        insert into adsrv.ads_has_slot
            (adsid,
             slotid,
             slot_state,
             insertdate,
             insertuser,
             updatedate,
             updateuser)
		values ($adsid$,
		        $slotid$,
		        0,
		        '$insertdate$',
		        $insertuser$,
		        now(),
		        $insertuser$
		);
	</insert>
	

    <update id="modAdsHasSlot" parameterClass="java.util.Map">
		update adsrv.ads_has_slot
		   set <isNotEmpty property="slot_state">slot_state = $slot_state$, </isNotEmpty>
		      <isNotEmpty property="stat">stat      = $stat$, </isNotEmpty> 
		       updatedate = now(),
		       updateuser = $updateuser$  
		 where adsid = $adsid$
		   and slotid = $slotid$;   
		</update>
		
	<select id="getTargetCodeList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
	   select a.entno, a.entname, tname, tseq, tvalue, x.text
		 from
		 (select a.code, a.isid, a.isname, text, isdefault
		 from code_instance a  
		      inner join code_entity b on b.tbname = 'target' and a.code = b.code
		 where a.stat = 1
		   and a.code = 'targettype' 
		   and isid = $targettype$
		 ) x
		 left join target_entity a on x.isid = a.targettype		
		 left join target_evalue b on a.entno = b.entno
	</select>
	<select id="getTargetList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		select a.targettype, i.isname as targettypename, a.tid, a.targetname, 
		       a.updateuser, u.username as updateusername, a.updatedate 
		 from target a		     
		      left join users u on a.updateuser = u.userid
		      left join code_instance i on i.code = 'targettype' and i.isid = a.targettype
		 where a.stat = 1     
		  	<isNotEmpty property="targettype"> and a.targettype = $targettype$ </isNotEmpty>
		  	<isNotEmpty property="sch_text" prepend="and"> targetname like '%$sch_text$%' </isNotEmpty>
		 order by <isNotEmpty property="order_str"> $order_str$ ,</isNotEmpty>
		 a.updatedate desc
         <isNotEmpty property="max">
          limit $skip$,$max$
          </isNotEmpty>;
	</select>
	<select id="getAdsTargetList" resultClass="java.util.HashMap" parameterClass="java.util.Map">	
		<!-- select a.`adsid`, c.adsname, b.targettype, i.isname as targettypename, b.tid, b.targetname, a.updatedate, a.updateuser, u.username as updateusername
		 from ads_targeting a 
		      left join target b on a.targetid = b.tid
		      left join ads c on a.adsid = c.adsid
		      left join code_instance i on i.code = 'targettype' and i.isid =b.targettype
		      left join users u on a.updateuser = u.userid
		where b.stat = 1
			 <isNotEmpty property="cpid"> and c.cpid = $cpid$</isNotEmpty>
			 <isNotEmpty property="adsid"> and a.adsid = $adsid$</isNotEmpty>
		 --> 
		select x.*, y.adsid, y.adsname, y.tid, y.targetname, y.updatedate, u.username as updateusername 
		  from (select i.isid as targettype, i.isname as targettypename, i.idx
		          from code_instance i	
		         where i.code = 'targettype'
		 		) x
		 		left join 
				(select c.adsid, c.adsname, b.`targettype`, b.`tid`, b.`targetname`, a.updatedate, a.updateuser
				    from ads_targeting a 
				         left join ads c on a.`adsid` = c.`adsid`
				         inner join target b on a.targetid = b.tid
				   <dynamic prepend="where">
				   		<isNotEmpty property="cpid"  prepend="and">  c.cpid = $cpid$</isNotEmpty>
			 			<isNotEmpty property="adsid"  prepend="and">  a.adsid = $adsid$</isNotEmpty>
				   </dynamic>
				 ) y on x.targettype = y.targettype		 
		         left join users u on y.updateuser = u.userid
		         <isEmpty property="adsid"> where y.adsid is not null </isEmpty>
		   order by x.idx	 
	</select>
	<select id="getAdsTargetSelectList" resultClass="java.util.HashMap" parameterClass="java.util.Map">	
	select a.targettype, i.isname as targettypename, a.tid, a.targetname, b.targetid
		 from target a
		      left join ads_targeting b on b.adsid = $adsid$ and a.tid = b.targetid
		      left join code_instance i on i.code = 'targettype' and a.targettype = i.isid
		 where a.stat = 1
		 order by i.idx, a.updatedate desc 
	</select>
	<select id="getTargetCnt" resultClass="Integer" parameterClass="java.util.Map">
		select count(*)
		 from target a		     
		      left join users u on a.updateuser = u.userid
		      left join code_instance i on i.code = 'targettype' and i.isid = a.targettype
		 where a.stat = 1     
		  	<isNotEmpty property="targettype"> and a.targettype = $targettype$ </isNotEmpty>
		  	<isNotEmpty property="sch_text" prepend="and"> targetname like '%$sch_text$%' </isNotEmpty>
	</select>
	
	
	<insert id="addAdsTargeting" parameterClass="java.util.Map">
         INSERT INTO ads_targeting (
			adsid, targettype, targetid, updatedate, updateuser
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].adsid#,
					#List[].targettype#,
					#List[].tid#,
					#List[].updatedate#,
					#List[].updateuser#
				) 
			</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE
    		targetid = VALUES(targetid),
    		updatedate = VALUES(updatedate),
    		updateuser = VALUES(updateuser)
      </insert>
	
	
	<insert id="addAdsCreative" parameterClass="java.util.HashMap">
		INSERT INTO ads_creative (
			adsid,  
	        crid,
	        seq,
	        stime,
	        etime,
	        startdate,         
	        enddate,
	        realenddate,
	        weight,
	        cr_state,
	        insertuser,
	        updatedate,
	        updateuser,
	        insertdate,
	        stat
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].adsid#,
					#List[].crid#,
					0,
					UNIX_TIMESTAMP(STR_TO_DATE(#List[].startdate#, '%Y%m%d %H%i')),
			       	UNIX_TIMESTAMP(STR_TO_DATE(#List[].realenddate#, '%Y%m%d %H%i')),
					#List[].startdate#,
					#List[].enddate#,
					#List[].realenddate#,
					100,
					0,
					#List[].insertuser#,
					#List[].insertdate#,
					#List[].insertuser#,
					#List[].insertdate#,
					1
				)
			</iterate>
		</dynamic>
	</insert>
	<update id="modAdsSlot" parameterClass="java.util.HashMap">
		update adsrv.ads_slot
		  set <isNotEmpty property="slot_state"> slot_state = $slot_state$, </isNotEmpty>
		      <isNotEmpty property="stat"> stat = $stat$, </isNotEmpty>
		      updatedate = $updatedate$,
		      updateuser = $updateuser$
		where adsid = $adsid$
		  <isNotEmpty property="slot_str">and slotid in ($slot_str$) </isNotEmpty>
		  <isNotEmpty property="slotid">and slotid = $slotid$ </isNotEmpty>
	</update>
	<insert id="addAdsSlot" parameterClass="java.util.HashMap">
	insert into ads_slot 
	(
	adsid,
		    slotid,
		    seq, 
		    slot_state, 
		    insertdate, 
		    insertuser, 
		    updatedate, 
		    updateuser, 
		    stat
	)
	 values 
	( $adsid$,
	      $slotid$,
	      0,
	      1,
	      $insertdate$,
	      $insertuser$,
	      $insertdate$,
	      $insertuser$,
	      1)
 	on duplicate key update stat = 1;
	</insert>
	<insert id="addAdsSlotByGroup" parameterClass="java.util.HashMap">
	insert into adsrv.ads_slot
    (	adsid,
	    slotid,seq, 
	    slot_state, 
	    insertdate, 
	    insertuser, 
	    updatedate, 
	    updateuser, 
	    stat
    ) 
    select $adsid$,
		  slotid,
		  0,
		  1,
	      $insertdate$,
	      $insertuser$,
	      $insertdate$,
	      $insertuser$,
		  1
     from slotgroup_slot
     where groupid = $groupid$
       and stat = 1
       and slotid not in (select slotid from ads_slot a where a.adsid = $adsid$ and a.stat = 1)
	on duplicate key update stat = 1;
	</insert>	
	<insert id="addTarget" parameterClass="java.util.Map">
		insert into adsrv.target
            (tid,
             targetname,
             targettype,
             updatedate,
             updateuser,
             stat
          	) values (0,
	        '$targetname$',
	        $targettype$,
	        now(),
	        $updateuser$,
	        1);
	    	<selectKey resultClass="int">
	         SELECT LAST_INSERT_ID()
	        </selectKey>  	
	</insert>
	<update id="modTarget" parameterClass="java.util.Map">
		update adsrv.target
		   set <isNotEmpty property="targetname">targetname = '$targetname$', </isNotEmpty>
		       <isNotEmpty property="stat">stat = $stat$, </isNotEmpty>
		       updatedate = now(),
               updateuser = $updateuser$
           where tid = $tid$;
	</update>
	<select id="getTarget" resultClass="target" parameterClass="java.util.Map">
		select a.targettype, i.isname as targettypename, a.tid, a.targetname, i.text as targetmenu,
		       a.updateuser, u.username as updateusername, a.updatedate 
		 from target a		     
		      left join users u on a.updateuser = u.userid
		      left join code_instance i on i.code = 'targettype' and i.isid = a.targettype
		 where a.stat = 1   
		   and a.tid = $tid$  
		  	       
	</select>	
	<select id="getSystemTargetValue" resultClass="target" parameterClass="java.util.Map">
	 select a.tid, a.targetname, a.targettype, freqday, freqcap, day, browser, time
	   from target a
			left join target_system b on a.tid = b.tid 
	  where a.tid = $tid$
	</select>
	
	
	
	
	<select id="getIpTargetValList" resultClass="target" parameterClass="java.util.Map">	
	select a.tid, a.targetname, a.targettype, idx, ip_from, ip_to, ip_alias
      from target a
		   inner join target_ip b on a.tid = b.tid 
	  where a.tid = $tid$
		and b.stat = 1
	 order by idx
	</select>
	<select id="getCategoryTargetValue" resultClass="target" parameterClass="java.util.Map">
	select a.tid, a.targetname, a.targettype, category
  	  from target a
		   inner join target_category b on a.tid = b.tid 
	  where a.tid = $tid$
	</select>
	<select id="getChannelTargetValue" resultClass="target" parameterClass="java.util.Map">
	  select a.tid, a.targetname, a.targettype, b.`excflag`, b.`slotid`, s.secid, s.siteid
	   from target a
			inner join target_channel b on a.tid = b.tid 
			left join slot s on b.slotid = s.slotid 
	  where a.tid = $tid$
	
	</select>
	<select id="getChannelTargetValList" resultClass="target" parameterClass="java.util.Map">
		select tid, idx, channelid, channelname
		   from target_channel_id a 			
		  where tid = $tid$
		    and stat = 1
		  order by idx	
	</select>	
	<select id="getCountryTargetValue" resultClass="target" parameterClass="java.util.Map">	
		select a.tid, a.targetname, a.targettype, 
	           b.excflag, country1, country2, country3, country4, country5, country6, country7, country8
		  from target a
			   inner join target_country b on a.tid = b.tid 
	     where a.tid = $tid$
	</select>

	<insert id="addTargetSystem" parameterClass="java.util.Map">	
		insert into adsrv.target_system
	            (tid,
	             freqday,
	             freqcap,
	             day,
	             browser,
	             time)
		values ($tid$,
		        $freqday$,
		        $freqcap$,
		        $day$,
		        $browser$,
		        $time$);
	</insert>
	<update id="modTargetSystem" parameterClass="java.util.Map">
		update adsrv.target_system
		   set freqday = $freqday$, 
		       freqcap = $freqcap$, 
		       day = $day$, 
		       browser = $browser$, 
		       time = $time$
           where tid = $tid$;
	</update>

	<insert id="addTargetIP" parameterClass="java.util.HashMap">
		INSERT INTO target_ip (
			tid
			, idx
			, ip_from
			, ip_to
			, ip_alias
			, stat
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].tid# 
					, 0
					, #List[].ip_from#
					, #List[].ip_to#
					, #List[].ip_alias#	
					, 1			
				)
			</iterate>
		</dynamic>
	</insert>
   <update id="modTargetIP" parameterClass="java.util.Map">
		update adsrv.target_ip
		   set stat = 0
           where tid = $tid$
             ;
	</update> 
 	<delete id="delTargetIP" parameterClass="java.util.HashMap">
		delete 
		  from target_ip
		 where tid = $tid$
		   and stat = 0
	</delete>
	
	<insert id="addTargetCategory" parameterClass="java.util.Map">
		insert into adsrv.target_category
		            (tid,
		             category)
		values ($tid$,
		        $category$);
	</insert>
	<update id="modTargetCategory" parameterClass="java.util.Map">
		update adsrv.target_category
		   set category = $category$
           where tid = $tid$;
	</update>
	
	
	<insert id="addTargetCountry" parameterClass="java.util.Map">
		insert into adsrv.target_country
		            (tid,
		             excflag,
		             country1,
		             country2,
		             country3,
		             country4,
		             country5,
		             country6,
		             country7,
		             country8)
		values ($tid$,
		        $excflag$,
		        $country1$,
		        $country2$,
		        $country3$,
		        $country4$,
		        $country5$,
		        $country6$,
		        $country7$,
		        $country8$);
    </insert>
    <update id="modTargetCountry" parameterClass="java.util.Map">
		update adsrv.target_country
		   set excflag = $excflag$,
		   	   country1 = $country1$,
		   	   country2 = $country2$,
		   	   country3 = $country3$,
		   	   country4 = $country4$,
		   	   country5 = $country5$,
		   	   country6 = $country6$,
		   	   country7 = $country7$,
		   	   country8 = $country8$
           where tid = $tid$;
	</update>
    
    
	<insert id="addTargetChannel" parameterClass="java.util.Map">
	    insert into adsrv.target_channel
                (tid,
                 excflag,
                 slotid)
	    values ($tid$,
	            $excflag$,
	            $slotid$); 	
	</insert>  
     <update id="modTargetChannel" parameterClass="java.util.Map">
		update adsrv.target_channel
		   set excflag = $excflag$,
		   	   slotid = $slotid$
           where tid = $tid$
             ;
	</update>       
	<insert id="addTargetChannelID" parameterClass="java.util.Map">
         INSERT INTO target_channel_id (
			tid
			, idx
			, channelid
			, channelname
			, stat
		) 
		<dynamic>
			<iterate prepend="VALUES" conjunction=", " property="List">
				( 
					#List[].tid# 
					, 0
					, #List[].channelid#
					, #List[].channelname#	
					, 1		
				)
			</iterate>
		</dynamic>
      </insert>
   
 	 <update id="modTargetChannelID" parameterClass="java.util.Map">
		update adsrv.target_channel_id
		   set stat = 0
           where tid = $tid$
          ;
	</update> 
      <delete id="delTargetChannelID" parameterClass="java.util.HashMap">
		delete 
		  from target_channel_id
		 where tid = $tid$
		   and stat = 0;
	  </delete>
      <insert id="addTemplate" parameterClass="java.util.HashMap">
	      insert into adsrv.template
	            (tmpid,
	             tmpname,
	             tmpcode,
	             memo, 
	             stat,
	             updatedate,
	             updateuser
	             )
			values (0,
		        #tmpname#,
		        #tmpcode#,
		        #memo#, 
		        1,
		        now(),
		        #userid#
		 	);
	 </insert>
	 <update id="modTemplate" parameterClass="java.util.HashMap">
		 update adsrv.template
		 	set <isNotEmpty property="tmpname">tmpname = '$tmpname$', </isNotEmpty>
		 	    <isNotEmpty property="imgflag">imgflag = $imgflag$, </isNotEmpty>
	            <isNotEmpty property="tmpcode">tmpcode = '$tmpcode$', </isNotEmpty>
	            <isNotEmpty property="memo">memo = '$memo$', </isNotEmpty>
	            <isNotEmpty property="stat">stat      = $stat$, </isNotEmpty> 
	            updatedate = now(),
	            updateuser = $userid$
	      where tmpid = $tmpid$
	 </update>
	 <select id="getTemplateList" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		select a.tmpid, a.tmpname, imgflag, memo,
		       a.updateuser, u.username as updateusername, a.updatedate 
		 from template a		     
		      left join users u on a.updateuser = u.userid
		 where a.stat = 1     
		  	<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
		 order by <isNotEmpty property="order_str"> $order_str$ ,</isNotEmpty>
		          a.updatedate desc
         <isNotEmpty property="max">
          limit $skip$,$max$
          </isNotEmpty>;
	</select>
	<select id="getTemplateCnt" resultClass="Integer" parameterClass="java.util.Map">
		select count(*)
		 from template a		     
		      left join users u on a.updateuser = u.userid
		 where a.stat = 1     
		  	<isNotEmpty property="sch_text" prepend="and"> $sch_column$ like '%$sch_text$%' </isNotEmpty>
	</select>
	 <select id="getTemplate" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		select a.tmpid, a.tmpname, tmpcode, imgflag, memo,
		       a.updateuser, u.username as updateusername, a.updatedate 
		 from template a		     
		      left join users u on a.updateuser = u.userid
		 where a.tmpid = $tmpid$     
	</select>
	
</sqlMap>
	 